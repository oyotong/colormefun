package shop.company.entity;

// Generated 2010-6-18 15:00:02 by Hibernate Tools 3.2.4.GA

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.Table;

/**
 * AuthRole generated by hbm2java
 */
@Entity
@Table(name = "auth_role")
public class AuthRole implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private String roleId;
	private String roleName;
	/*private Set<AuthUser> authUsers = new HashSet<AuthUser>(0);*/
	private Set<AuthPurview> authPurviews = new HashSet<AuthPurview>(0);

	public AuthRole() {
	}

	public AuthRole(String roleId) {
		this.roleId = roleId;
	}
	
	public AuthRole(String roleId, String roleName) {
		this.roleId = roleId;
		this.roleName = roleName;
	}

	public AuthRole(String roleId, String roleName, /*Set<AuthUser> authUsers,*/
			Set<AuthPurview> authPurviews) {
		this.roleId = roleId;
		this.roleName = roleName;
		/*this.authUsers = authUsers;*/
		this.authPurviews = authPurviews;
	}

	@Id
	@GeneratedValue(strategy=GenerationType.AUTO)
	@Column(name = "ROLE_ID", unique = true, nullable = false, length = 50)
	public String getRoleId() {
		return this.roleId;
	}

	public void setRoleId(String roleId) {
		this.roleId = roleId;
	}

	@Column(name = "ROLE_NAME", length = 50)
	public String getRoleName() {
		return this.roleName;
	}

	public void setRoleName(String roleName) {
		this.roleName = roleName;
	}

	/*@ManyToMany(fetch = FetchType.LAZY,targetEntity=AuthUser.class)
	@JoinTable(name = "auth_user_role", joinColumns = { @JoinColumn(name = "ROLE_ID", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "USER_ID", nullable = false, updatable = false) })
	public Set<AuthUser> getAuthUsers() {
		return this.authUsers;
	}

	public void setAuthUsers(Set<AuthUser> authUsers) {
		this.authUsers = authUsers;
	}*/

	@ManyToMany(fetch = FetchType.EAGER,targetEntity=AuthPurview.class)
	@JoinTable(name = "auth_role_purview", joinColumns = { @JoinColumn(name = "ROLE_ID", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "PURVIEW_ID", nullable = false, updatable = false) })
	public Set<AuthPurview> getAuthPurviews() {
		return this.authPurviews;
	}

	public void setAuthPurviews(Set<AuthPurview> authPurviews) {
		this.authPurviews = authPurviews;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((roleId == null) ? 0 : roleId.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		AuthRole other = (AuthRole) obj;
		if (roleId == null) {
			if (other.roleId != null)
				return false;
		} else if (!roleId.equals(other.roleId))
			return false;
		return true;
	}

}
